module

open import Props

Classifier : (A : Type) -> Type
Classifier A = (x : A) -> [pred : A -> Type; holds : pred x]



DecToSit : (T : Type) -> (P : T -> Type) -> (x : T) -> Dec (P x) -> [pred : T -> Type; holds : pred x]
DecToSit T P x
 = split
      yes q ->  (pred = P, holds = q)
      no  q ->  (pred = \x -> Not (P x), holds = q)

DecidableToClassifier : (T : Type) -> (P : T -> Type) -> Decidable P -> Classifier T
DecidableToClassifier T P dec x = DecToSit T P x dec
